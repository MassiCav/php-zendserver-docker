#!make
########################## Variables #####################
HERE		:= $(dir $(realpath $(firstword $(MAKEFILE_LIST))))
##########################################################

##### Makefile related #####
.PHONY: all clean data-clean build docker-up info

default: help

##@ Help

help:  ## Display this help
	@awk 'BEGIN {FS = ":.*##"; printf "\nUsage:\n  make \033[36m<target>\033[0m\n"} /^[a-zA-Z_-]+:.*?##/ { printf "  \033[36m%-40s\033[0m %s\n", $$1, $$2 } /^##@/ { printf "\n\033[1m%s\033[0m\n", substr($$0, 5) } ' $(MAKEFILE_LIST)

##@ Image Building

build: ## Build Docker image :latest
	ext
	@cd "$(HERE)"
	@echo
	@echo "\033[92mBuilding Zend Server image...\033[0m"
	docker build -t zend/php-zendserver:latest .
	@echo "\033[92mZend Server image building done!\033[0m"
	@echo

build-all: ## Build all Docker images
	ext
	@cd "$(HERE)"
	@echo
	@echo "\033[92mBuilding Zend Server images...\033[0m"
	docker build -t zend/php-zendserver:2019.0.5-nginx \
				-t zend/php-zendserver:2019.0.5 \
				-t zend/php-zendserver:2019.0 \
				-t zend/php-zendserver:latest \
				-f Dockerfile.custom .

	docker build --build-arg zs_flavor=apache-fpm \
				-t zend/php-zendserver:2019.0.5-apache \
				-f Dockerfile.custom .

	docker build --build-arg image=ubuntu \
				--build-arg tag=xenial \
				--build-arg zs_flavor=nginx \
				--build-arg zs_ver=9.1.10 \
				--build-arg zs_php=7.1 \
				-t zend/php-zendserver:9.1.10-nginx \
				-t zend/php-zendserver:9.1.10 \
				-t zend/php-zendserver:9.1 \
				-f Dockerfile.custom .

	docker build --build-arg image=ubuntu \
				--build-arg tag=trusty \
				--build-arg zs_flavor=nginx \
				--build-arg zs_ver=8.5.15 \
				--build-arg zs_php=5.6 \
				-t zend/php-zendserver:8.5.15-nginx \
				-t zend/php-zendserver:8.5.15 \
				-t zend/php-zendserver:8.5 \
				-f Dockerfile.custom .

	@echo "\033[92mZend Server images building done!\033[0m"
	@echo

push: ## Push all Docker images
	@cd "$(HERE)"
	@echo
	@echo "\033[92mPushing Zend Server images...\033[0m"
	docker push zend/php-zendserver:latest
	docker push zend/php-zendserver:2019.0.5-nginx
	docker push zend/php-zendserver:2019.0.5
	docker push zend/php-zendserver:2019.0
	docker push zend/php-zendserver:2019.0.5-apache
	docker push zend/php-zendserver:9.1.10-nginx
	docker push zend/php-zendserver:9.1.10
	docker push zend/php-zendserver:9.1	
	docker push zend/php-zendserver:8.5.15-nginx
	docker push zend/php-zendserver:8.5.15
	docker push zend/php-zendserver:8.5
	@echo "\033[92mPushing Zend Server images...\033[0m"
	@echo

##@ Zend Server containers

cluster: ## Launch a Zend Server cluster
	@cd "$(HERE)"
	@echo
	@echo "\033[92mStarting Cluster...\033[0m"
	docker-compose up
	@echo "\033[92mShutting Down Cluster...\033[0m"
	docker-compose down --remove-orphans
	@echo "\033[92mdone...\033[0m"
	@echo

single: ## Launch a single Zend Server container (:latest, interactive)
	@cd "$(HERE)"
	@echo
	@echo "\033[92mStarting a Single Zend Server...\033[0m"
	docker run --rm -Pti -v "$(HERE)DocRoot":/var/www/html zend/php-zendserver:latest bash
	@echo "\033[92mdone...\033[0m"
	@echo

docker-up: ## (DEPRECATED) Start application
	@echo
	@echo "\033[92mLoading system...\033[0m"
	docker-compose up -d --remove-orphans
	docker-compose ps
	@echo "\033[92mSystem loaded successfully!\033[0m"
	@echo

info: ## Show system info
	@echo
	@echo "\033[92mSystem Info\033[0m"
	@echo
	@docker ps -a

##@ Maintenance

all: build single ## Docker build and start configured container

ext: ## Get extension archives from rbzend/extender4zs
	rm -f "$(HERE)extensions/"*.run
	rm -f "$(HERE)extensions/"*.tgz
	docker pull rbzend/extender4zs:2019.0.5-7.3-ubuntu-bionic
	docker run --rm -v "$(HERE)/extensions:/ea" rbzend/extender4zs:2019.0.5-7.3-ubuntu-bionic cp /inotify-ZS_2019.0.5-php_7.3-ubuntu_bionic.run /swoole-ZS_2019.0.5-php_7.3-ubuntu_bionic.run /ea/
	docker pull rbzend/extender4zs:9.1.10-7.1-ubuntu-xenial
	docker run --rm -v "$(HERE)/extensions:/ea" rbzend/extender4zs:9.1.10-7.1-ubuntu-xenial cp ./inotify-ZS_9.1.10-php_7.1-ubuntu_xenial.run /swoole-ZS_9.1.10-php_7.1-ubuntu_xenial.run /ea/
	# docker pull rbzend/extender4zs:8.5.15-5.6-ubuntu-trusty
	# docker run --rm -v "$(HERE)extensions:/ea" rbzend/extender4zs:8.5.15-5.6-ubuntu-trusty cp /inotify-ZS_8.5.15-php_5.6-ubuntu_trusty.run /ea/
	cd "$(HERE)extensions/"; COPYFILE_DISABLE=1; export COPYFILE_DISABLE; find . -iname "*.run" -exec tar czf "{}.tgz" "{}" \;
	rm -f "$(HERE)extensions/"*.run

clean: ## Caution: stops and removes all Docker containers
	@cd "$(HERE)"
	docker-compose kill
	docker-compose rm -fsv
	docker-compose down --remove-orphans

data-clean: ## Removing files generated by the automations
	@cd "$(HERE)"
	@echo
	@echo "\033[92mRemoving unnecessary leftovers...\033[0m"
	find ./DocRoot -type l | xargs rm -f

